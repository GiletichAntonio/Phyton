# 7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме: название,
# форма собственности, выручка, издержки. Пример строки файла: firm_1 ООО 10000 5000. Необходимо построчно прочитать
# файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма получила убытки, в расчет средней
# прибыли ее не включать. Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями,
# а также словарь со средней прибылью. Если фирма получила убытки, также добавить ее в словарь (со значением
# убытков). Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}]. Итоговый
# список сохранить в виде json-объекта в соответствующий файл. Пример json-объекта: [{"firm_1": 5000, "firm_2": 3000,
# "firm_3": 1000}, {"average_profit": 2000}]
#
# Подсказка: использовать менеджеры контекста.

import json

result = []
with open('ex_file7.json', "w", encoding="utf-8") as write_f:
    with open('text_file7.txt', encoding="utf-8") as f_obj:
        profit = {}
        for line in f_obj:
            '''Записываем в строку элементы через пробел по ключу
            (по 0 индексу), считаем прибыль через разность по 2 и 3 индексу
             Далее работаем со словарем профит, через условие прибыли больше 0,
             поновой переписываем кол. таких фирм'''
            profit[line.split(' ')[0]] = int(line.split(' ')[2]) - int(line.split(' ')[3])
        average_profit = sum([int(i) for i in profit.values() if int(i) > 0]) / len(
            [int(i) for i in profit.values() if int(i) > 0])
        result.append(profit)
        result.append({"average_profit": round(average_profit)})
    json.dump(result, write_f)
